
Build instructions
=======================================================================

Simply follow these instructions after cloning a personal copy of the Builder. 

In order to build from source you will need a Java JDK installed. 

The offical build currently uses release 17.3+7 
  
You can find OpenJDK releases for jdk and jre here:
https://adoptium.net/temurin/releases

On Windows its best to choose to download a version ending with '.msi' 
so needed system variables are set correctly like, JAVA_HOME.

Much of the needed toolchain will be auto-detected and downloaded dynamically
but you do need to start with a version of gradle.

download gradle 7.4.2
https://gradle.org/releases/

Instructions for installation of gradle is available here:
https://docs.gradle.org/current/userguide/installation.html

Create runnable program:

gradlew.bat clean jlink
or 
./gradlew clean jlink

Your output will be inside build/tmp and will contain the various 
runtime images for windows, linux and macos platforms.

Start scripts will be inside the GUIsliceBuilder folder, GUIslice.bat 
and GUIslice.sh (a shell script). You may need to set execute permission 
on GUIslice.sh shell script on linux systems. 

WINDOWS INSTALLER
=======================================================================

If you want to create a windows installer (which isn't stricly needed) 
you will need to first be running windows. This is because the build 
uses inno setup and that product is windows only. 

Download and install inno setup innosetup-qsp-5.6.1.exe
http://www.jrsoftware.org/isdl.php#qsp

After that you can create the distribution packages
using 
gradlew.bat packageAll 

The distributions will be inside build/disp folder. 
 
Do not use build/distributions tar and zip files because they're incomplete 
and only contain the java code and are lacking fonts and templates.

DEBUGGING
=======================================================================

If you need to debug or modify GUIsliceBuilder using an IDE like Eclipse 
you will need to add a commandline argument to the jvm in order for the 
executable to adjust its working directory. Otherwise, it will be unable 
to find the needed fonts and templates. The argument is "insideIDE". 
